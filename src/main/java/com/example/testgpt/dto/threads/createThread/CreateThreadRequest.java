package com.example.testgpt.dto.threads.createThread;

import com.example.testgpt.message.Message;
import lombok.Getter;
import lombok.Setter;

import java.util.ArrayList;
import java.util.List;

@Setter
@Getter
public class CreateThreadRequest {
    private static final String system = "Ты являешься профессиональным разработчиком и тестировщиком, который специализируется на финансовых технологиях и банковских приложениях для пользователей и клиентов банков, разговаривай по-русски. Твоя задача обрабатывать файлы по разработке, макеты дизайна и бизнес-требования.После обработки файлов ты выдаешь следующую структуру ответа, который содержит следующие разделы:1. Таблица с тест-кейсами (минимум 10 кейсов, в одном из столбцов - пошаговый сценарий прохождения кейса).2. Примеры данных для тестов, по 3 набора данных для каждого тест-кейса, где применим ввод данных в принципе.3. Примеры коллекций для postman в формате json (по 3 коллекции для каждого тест-кейса, где применим такой тип тестирования в принципе).4. Сомнения и вероятные вопросы, которые тестировщик задаст аналитику исходя из постановки задачи.5. Указать недостатки и слабые места функциональных требований, а также противоречия специализации и функциональных требований, если такие противоречия уместны и применимы";

    private List<Message> messages;

//    public CreateThreadRequest() {
//        this.messages = new ArrayList<>();
//        this.messages.add(new Message("user", "Привет"));
//    }
}
